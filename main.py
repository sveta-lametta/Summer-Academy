import os
import csv
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    ContextTypes,
    MessageHandler,
    filters,
    ConversationHandler,
)

# –°—Ç–∞–¥–∏–∏ –¥–∏–∞–ª–æ–≥–∞
NAME, AGE, GENDER, COUNTRY, Q1, Q2, Q3 = range(7)

user_data_list = []

reply_keyboard_q1 = [
    ["–ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é –æ–±—â–∞—Ç—å—Å—è —Å 1-2 –ª—é–¥—å–º–∏ –∏–ª–∏ –±—ã—Ç—å –æ–¥–∏–Ω"],
    ["–ß—É–≤—Å—Ç–≤—É—é —Å–µ–±—è –Ω–æ—Ä–º–∞–ª—å–Ω–æ –∏ –≤ –æ–¥–∏–Ω–æ—á–∫—É, –∏ –≤ –∫–æ–º–ø–∞–Ω–∏–∏"],
    ["–õ—é–±–ª—é –±—ã—Ç—å —Å—Ä–µ–¥–∏ –ª—é–¥–µ–π, –ª–µ–≥–∫–æ –∑–∞–≤–æ–∂—É –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞"],
]

reply_keyboard_q2 = [
    ["–ß–∏—Ç–∞—é –∫–Ω–∏–≥—É –∏–ª–∏ —Å–º–æ—Ç—Ä—é —Ñ–∏–ª—å–º –¥–æ–º–∞"],
    ["–í—Å—Ç—Ä–µ—á–∞—é—Å—å —Å –¥—Ä—É–∑—å—è–º–∏ –Ω–∞ –ø—Ä–æ–≥—É–ª–∫–µ"],
    ["–ò—â—É –Ω–æ–≤—ã–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏"],
]

reply_keyboard_q3 = [
    ["–°—Ç–∞—Ä–∞—é—Å—å –Ω–∞–±–ª—é–¥–∞—Ç—å, –ø–æ–∫–∞ –Ω–µ –ø—Ä–∏–≤—ã–∫–Ω—É –∫ –≥—Ä—É–ø–ø–µ"],
    ["–°—Ç–∞—Ä–∞—é—Å—å –±—ã—Å—Ç—Ä–æ –∑–∞–≤–µ—Å—Ç–∏ –ø–∞—Ä—É –∑–Ω–∞–∫–æ–º—Å—Ç–≤"],
    ["–ê–∫—Ç–∏–≤–Ω–æ –≤–∫–ª—é—á–∞—é—Å—å –≤ —Ä–∞–∑–≥–æ–≤–æ—Ä –∏ –∑–Ω–∞–∫–æ–º–ª—é—Å—å —Å–æ –≤—Å–µ–º–∏"],
]

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –î–∞–≤–∞–π –Ω–∞—á–Ω—ë–º. –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç? (–∏–º—è, —Ñ–∞–º–∏–ª–∏—è)")
    return NAME

async def get_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["name"] = update.message.text
    await update.message.reply_text("–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?")
    return AGE

async def get_age(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["age"] = update.message.text
    await update.message.reply_text("–¢–≤–æ–π –ø–æ–ª? (–º/–∂/–¥—Ä—É–≥–æ–µ)")
    return GENDER

async def get_gender(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["gender"] = update.message.text
    await update.message.reply_text("–ò–∑ –∫–∞–∫–æ–π —Ç—ã —Å—Ç—Ä–∞–Ω—ã?")
    return COUNTRY

async def get_country(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["country"] = update.message.text
    await update.message.reply_text(
        "1. –ö–∞–∫ —Ç—ã —á—É–≤—Å—Ç–≤—É–µ—à—å —Å–µ–±—è –≤ –∫–æ–º–ø–∞–Ω–∏–∏ –¥—Ä—É–≥–∏—Ö –ª—é–¥–µ–π?",
        reply_markup=ReplyKeyboardMarkup(reply_keyboard_q1, one_time_keyboard=True, resize_keyboard=True),
    )
    return Q1

async def get_q1(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["q1"] = update.message.text
    await update.message.reply_text(
        "2. –ö–∞–∫ —Ç—ã –æ—Ç–¥—ã—Ö–∞–µ—à—å?",
        reply_markup=ReplyKeyboardMarkup(reply_keyboard_q2, one_time_keyboard=True, resize_keyboard=True),
    )
    return Q2

async def get_q2(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["q2"] = update.message.text
    await update.message.reply_text(
        "3. –ö–∞–∫ —Ç—ã –≤–µ–¥—ë—à—å —Å–µ–±—è –≤ –Ω–æ–≤–æ–π –≥—Ä—É–ø–ø–µ?",
        reply_markup=ReplyKeyboardMarkup(reply_keyboard_q3, one_time_keyboard=True, resize_keyboard=True),
    )
    return Q3

async def get_q3(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["q3"] = update.message.text

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ Google Sheets
    values = [
        context.user_data.get("name", ""),
        context.user_data.get("age", ""),
        context.user_data.get("gender", ""),
        context.user_data.get("country", ""),
        context.user_data.get("q1", ""),
        context.user_data.get("q2", ""),
        context.user_data.get("q3", ""),
    ]
    sheet.append_row(values)

    await update.message.reply_text("–°–ø–∞—Å–∏–±–æ! –¢—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à—ë–ª —Ç–µ—Å—Ç üåü")
    return ConversationHandler.END

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–û–ø—Ä–æ—Å –ø—Ä–µ—Ä–≤–∞–Ω.")
    return ConversationHandler.END

def main():
    token = os.getenv("BOT_TOKEN")
    if not token:
        print("–û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω —Ç–æ–∫–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN")
        return

    app = ApplicationBuilder().token(token).build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_name)],
            AGE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_age)],
            GENDER: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_gender)],
            COUNTRY: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_country)],
            Q1: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_q1)],
            Q2: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_q2)],
            Q3: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_q3)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    app.add_handler(conv_handler)
    app.run_polling()

if __name__ == "__main__":
    main()
#–¥–∞–ª—å—à–µ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å json
import os
import json
import gspread
from oauth2client.service_account import ServiceAccountCredentials

def get_sheet():
    scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º JSON –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
    creds_json = os.getenv("GOOGLE_CREDENTIALS_JSON")
    creds_dict = json.loads(creds_json)

    creds = ServiceAccountCredentials.from_json_keyfile_dict(creds_dict, scope)
    client = gspread.authorize(creds)

    # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ø–æ –∏–º–µ–Ω–∏
    sheet = client.open("–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–≤–æ–µ–π —Ç–∞–±–ª–∏—Ü—ã").sheet1
    return sheet
